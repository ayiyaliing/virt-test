- esx_unattended:
    virt_test_type = esx
    type = esx_unattended
    start_vm = no
    kill_vm = yes
    kill_vm_gracefully = yes
    kill_vm_on_error = yes
    shutdown_cleanly = yes
    shutdown_cleanly_timeout = 120
    force_create_image = yes
    guest_port_esx_unattended = 12323
    kernel = vmlinuz
    initrd = initrd.img
    # Throw errors if guest screen is inactive
    inactivity_watcher = error
    # Inactivity treshold to error the test
    inactivity_treshold = 1800
    # Set migrate_background to yes to run migration in parallel
    # migrate_background = yes
    image_verify_bootable = no
    #iso nfs
    local_media=nfs
    local_image_nfs_server=10.66.90.128:/vol/S1/iso/
    local_image_dir=/root/virt-test/shared/data/nfs/
    #host config
    local_ip = 10.66.8.101
    remote_esx = 10.66.106.52
    remote_password = 123qweP

    #esx mount nfs name
    esx_nfs_mount = virt-test-nfs

    #esx file demo test
    .encoding = UTF-8 
    config.version = 8   
    virtualHW.version = 8        
    displayName = jingli-esx-auto
    scsi0.present = TRUE       
    scsi0.virtualDev = lsilogic
    memsize = 1024        
    scsi0.0.present = TRUE                  	
    scsi0.0.fileName = jingli-esx-auto.vmdk
    ide1.0.present = TRUE          
    ide1.0.deviceType = cdrom-image
    ide1.0.startConnected = TRUE                                                   
    ide1.0.filename = rhel6-5.iso
    guestOS = rhel6-64                     
    virtualHW.productCompatibility = hosted
    ethernet0.present = TRUE      
    ethernet0.virtualDev = vmxnet3    
    ethernet0.networkName = VM Network
    pciBridge0.present = TRUE
    pciBridge0.virtualDev = pcieRootPort
    pciBridge1.present = TRUE
    pciBridge1.virtualDev = "pciBridge"
    pciBridge4.present = TRUE           
    pciBridge4.virtualDev = pcieRootPort
    pciBridge4.functions = 8 
    pciBridge5.present = TRUE           
    pciBridge5.virtualDev = pcieRootPort
    pciBridge5.functions = 8 
    pciBridge6.present = TRUE           
    pciBridge6.virtualDev = pcieRootPort
    pciBridge6.functions = 8 
    pciBridge7.present = TRUE           
    pciBridge7.virtualDev = pcieRootPort
    pciBridge6.functions = 8
    floppy0.fileType = file
    floppy0.fileName = ks.flp
    floppy0.clientDevice = FALSE
    bios.forceSetupOnce = "FALSE"
    bios.bootOrder = "hdd,cdrom"

     

    # Way of delivering ks file into the guest
    variants:
        # Additional iso with kickstart is attached into the guest
        - extra_cdrom_ks:
            only Linux
            unattended_delivery_method = cdrom
            cdroms += " unattended"
            drive_index_unattended = 1
            drive_index_cd1 = 2
        # Kickstart is packed into the installation iso
        - in_cdrom_ks:
            only Linux, esx_unattended.cdrom
            unattended_delivery_method = integrated
        # Autotest starts simple http server providing kickstart
        - http_ks:
            only Linux
            unattended_delivery_method = url
        # Image with kickstart is attached into the guest as floppy drive
        - floppy_ks:
            only Linux
            unattended_delivery_method = floppy
        #    local_ip = 10.66.8.101
        #    remote_esx = 10.66.106.52
        #    remote_password = 123qweP
        #    cdrom_cd1 = isos/linux/RHEL-6.4-x86_64.iso
        #    md5sum_cd1 = f56ee67421192973c7d761fc7ab43de5
        #    md5sum_1m_cd1 = cc373dc662bbeda48504567f1d18e831
        #    sha1sum_cd1 = c39e93539aa0c1b9f503190488f8073c04d394c5
        #    sha1sum_1m_cd1 = e2d49dc3fbe17a6b2ba1812543f2cc08ef9565c4
        #    unattended_file = unattended/RHEL-6-series.ks
        #    floppies = "fl"
            #floppy_name = images/rhel-6.4-x86_64/esx_unattended.flp
            #floppy0.fileType = file
	    #floppy0.fileName = ks.flp
	    #floppy0.clientDevice = FALSE


        # Only perform a libvirt import. No cdroms, no floppies, no nothing
        - import:
            virt_test_type = libvirt
            no cdrom, url, nfs, remote_ks, pxe, kernel_initrd
            cdroms = ""
            floppy = ""
            timeout = 180

    variants:
        # Install guest from cdrom
        - cdrom:
            # TODO: is this needed for both kvm and libvirt?
            # This option is only used in windows installation case,
            # since linux use kernel/initrd option of qemu.
            boot_once = d
            medium = cdrom
            redirs += " esx_unattended"
        # Install guest from http/ftp url
        - url:
            only Linux
            medium = url
            url = REPLACE_THIS_WITH_TREE_URL
        # Install guest from nfs nfs_server:nfs_dir
        - nfs:
            only Linux
            medium = nfs
            nfs_server = REPLACE_THIS_WITH_NFS_SERVER
            nfs_dir = REPLACE_THIS_WITH_NFS_DIRECTORY
        # Install guest with a remote kickstart
        - remote_ks:
            only Linux
            medium = url
            # TODO: does kvm need to prefix this with '--append'?
            extra_params = " ks=REPLACE_THIS_WITH_URL_OF_KS"
            url = REPLACE_THIS_WITH_TREE_URL
        # Install guest using pxe/tftp  (virt-install --pxe)
        - pxe:
            only Linux
            medium = pxe
        # Install guest using kernel/initrd pair from directory
        - kernel_initrd:
            only Linux
            medium = kernel_initrd
        - import:
            virt_test_type = libvirt
            no extra_cdrom_ks, in_cdrom_ks, http_ks, floppy_ks
            medium = import
            force_create_image = no
            create_image = no
